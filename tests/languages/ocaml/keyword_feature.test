as
assert
begin
class
constraint
do
done
downto
else
end
exception
external
for
fun
function
functor
if
in
include
inherit
initializer
lazy
let
match
method
module
mutable
new
nonrec
object
of
open
private
rec
sig
struct
then
to
try
type
val
value
virtual
when
where
while
with

----------------------------------------------------

[
	["keyword", "as"],
	["keyword", "assert"],
	["keyword", "begin"],
	["keyword", "class"],
	["keyword", "constraint"],
	["keyword", "do"],
	["keyword", "done"],
	["keyword", "downto"],
	["keyword", "else"],
	["keyword", "end"],
	["keyword", "exception"],
	["keyword", "external"],
	["keyword", "for"],
	["keyword", "fun"],
	["keyword", "function"],
	["keyword", "functor"],
	["keyword", "if"],
	["keyword", "in"],
	["keyword", "include"],
	["keyword", "inherit"],
	["keyword", "initializer"],
	["keyword", "lazy"],
	["keyword", "let"],
	["keyword", "match"],
	["keyword", "method"],
	["keyword", "module"],
	["keyword", "mutable"],
	["keyword", "new"],
	["keyword", "nonrec"],
	["keyword", "object"],
	["keyword", "of"],
	["keyword", "open"],
	["keyword", "private"],
	["keyword", "rec"],
	["keyword", "sig"],
	["keyword", "struct"],
	["keyword", "then"],
	["keyword", "to"],
	["keyword", "try"],
	["keyword", "type"],
	["keyword", "val"],
	["keyword", "value"],
	["keyword", "virtual"],
	["keyword", "when"],
	["keyword", "where"],
	["keyword", "while"],
	["keyword", "with"]
]

----------------------------------------------------

Checks for keywords.