&Math.zero?(0)
fun = &Math.zero?/1
(&is_function/1).(fun)
fun = &(&1 + 1)
&List.flatten(&1, &2)

fun = &Math.zero?/invalid

----------------------------------------------------

[
	["operator", "&"],
	["module", "Math"],
	["punctuation", "."],
	["function", "zero?" ],
	["punctuation", "("],
	["number", "0"],
	["punctuation", ")"],
	"\r\nfun ", ["operator", "="],
	["operator", "&"],
	["module", "Math"],
	["punctuation", "."],
	["function", "zero?" ],
	["operator", "/"],
	["number", "1"],
	["punctuation", "("],
	["operator", "&"],
	["function", "is_function"],
	["operator", "/"],
	["number", "1"],
	["punctuation", ")"],
	["punctuation", "."],
	["punctuation", "("], "fun", ["punctuation", ")"],
	"\r\nfun ", ["operator", "="],
	["operator", "&"],
	["punctuation", "("], ["argument", "&1"],
	["operator", "+"], ["number", "1"], ["punctuation", ")"],
	["operator", "&"],
	["module", "List"],
	["punctuation", "."], ["function", "flatten"],
	["punctuation", "("], ["argument", "&1"],
	["punctuation", ","], ["argument", "&2"],
	["punctuation", ")"],
	"\r\n\r\nfun ",
	[ "operator", "=" ],
	[ "operator", "&" ],
	[ "module", "Math" ],
	[ "punctuation", "." ],
	"zero?",
	[ "operator", "/" ],
	"invalid"
]

----------------------------------------------------

Checks for function capturing and arguments.
