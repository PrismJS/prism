unit$_ = Unit;
true$_ = True;
// EMPTY False;
bool_false$0 = Bool;
bool_true$1 = Bool;
bool_false$0 = BoolFalse;
bool_true$1 = BoolTrue;
nothing$0 {X:Type} = Maybe X;
just$1 {X:Type} value:X = Maybe X;
left$0 {X:Type} {Y:Type} value:X = Either X Y;
right$1 {X:Type} {Y:Type} value:Y = Either X Y;
pair$_ {X:Type} {Y:Type} first:X second:Y = Both X Y;

_ {n:#} _:(Hashmap n True) = BitstringSet n;

unary_zero$0 = Unary ~0;
unary_succ$1 {n:#} x:(Unary ~n) = Unary ~(n + 1);

hme_empty$0 {n:#} {X:Type} = HashmapE n X;
hme_root$1 {n:#} {X:Type} root:^(Hashmap n X) = HashmapE n X;

//  HashmapAug, hashmap with an extra value
//   (augmentation) of type Y at every node
//
ahm_edge#_ {n:#} {X:Type} {Y:Type} {l:#} {m:#}
  label:(HmLabel ~l n) {n = (~m) + l}
  node:(HashmapAugNode m X Y) = HashmapAug n X Y;
ahmn_leaf#_ {X:Type} {Y:Type} extra:Y value:X = HashmapAugNode 0 X Y;
ahmn_fork#_ {n:#} {X:Type} {Y:Type} left:^(HashmapAug n X Y)
  right:^(HashmapAug n X Y) extra:Y = HashmapAugNode (n + 1) X Y;

ahme_empty$0 {n:#} {X:Type} {Y:Type} extra:Y
          = HashmapAugE n X Y;
ahme_root$1 {n:#} {X:Type} {Y:Type} root:^(HashmapAug n X Y)
  extra:Y = HashmapAugE n X Y;

acst_unchanged$0 = AccStatusChange;  // x -> x
acst_frozen$10 = AccStatusChange;    // init -> frozen
acst_deleted$11 = AccStatusChange;   // frozen -> deleted

shard_descr#b seq_no:uint32 reg_mc_seqno:uint32
  start_lt:uint64 end_lt:uint64
  root_hash:bits256 file_hash:bits256
  before_split:Bool before_merge:Bool
  want_split:Bool want_merge:Bool
  nx_cc_updated:Bool flags:(## 3) { flags = 0 }
  next_catchain_seqno:uint32 next_validator_shard:uint64
  min_ref_mc_seqno:uint32 gen_utime:uint32
  split_merge_at:FutureSplitMerge
  fees_collected:CurrencyCollection
  funds_created:CurrencyCollection = ShardDescr;

----------------------------------------------------

[
	["variable", "unit"],
	["symbol", "$_"],
	["operator", "="],
	["builtin", "Unit"],
	["punctuation", ";"],

	["variable", "true"],
	["symbol", "$_"],
	["operator", "="],
	["keyword", "True"],
	["punctuation", ";"],

	["comment", "// EMPTY False;"],

	["variable", "bool_false"],
	["symbol", "$0"],
	["operator", "="],
	["builtin", "Bool"],
	["punctuation", ";"],

	["variable", "bool_true"],
	["symbol", "$1"],
	["operator", "="],
	["builtin", "Bool"],
	["punctuation", ";"],

	["variable", "bool_false"],
	["symbol", "$0"],
	["operator", "="],
	["keyword", "BoolFalse"],
	["punctuation", ";"],

	["variable", "bool_true"],
	["symbol", "$1"],
	["operator", "="],
	["keyword", "BoolTrue"],
	["punctuation", ";"],

	["variable", "nothing"],
	["symbol", "$0"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["operator", "="],
	["builtin", "Maybe"],
	["variable", "X"],
	["punctuation", ";"],

	["variable", "just"],
	["symbol", "$1"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["variable", "value"],
	["punctuation", ":"],
	["variable", "X"],
	["operator", "="],
	["builtin", "Maybe"],
	["variable", "X"],
	["punctuation", ";"],

	["variable", "left"],
	["symbol", "$0"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "Y"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["variable", "value"],
	["punctuation", ":"],
	["variable", "X"],
	["operator", "="],
	["builtin", "Either"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ";"],

	["variable", "right"],
	["symbol", "$1"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "Y"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["variable", "value"],
	["punctuation", ":"],
	["variable", "Y"],
	["operator", "="],
	["builtin", "Either"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ";"],

	["variable", "pair"],
	["symbol", "$_"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "Y"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["variable", "first"],
	["punctuation", ":"],
	["variable", "X"],
	["variable", "second"],
	["punctuation", ":"],
	["variable", "Y"],
	["operator", "="],
	["builtin", "Both"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ";"],

	["variable", "_"],
	["punctuation", "{"],
	["variable", "n"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],
	["variable", "_"],
	["punctuation", ":"],
	["punctuation", "("],
	["variable", "Hashmap"],
	["variable", "n"],
	["keyword", "True"],
	["punctuation", ")"],
	["operator", "="],
	["variable", "BitstringSet"],
	["variable", "n"],
	["punctuation", ";"],

	["variable", "unary_zero"],
	["symbol", "$0"],
	["operator", "="],
	["variable", "Unary"],
	["operator", "~"],
	["number", "0"],
	["punctuation", ";"],

	["variable", "unary_succ"],
	["symbol", "$1"],
	["punctuation", "{"],
	["variable", "n"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],
	["variable", "x"],
	["punctuation", ":"],
	["punctuation", "("],
	["variable", "Unary"],
	["operator", "~"],
	["variable", "n"],
	["punctuation", ")"],
	["operator", "="],
	["variable", "Unary"],
	["operator", "~"],
	["punctuation", "("],
	["variable", "n"],
	["operator", "+"],
	["number", "1"],
	["punctuation", ")"],
	["punctuation", ";"],

	["variable", "hme_empty"],
	["symbol", "$0"],
	["punctuation", "{"],
	["variable", "n"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["operator", "="],
	["variable", "HashmapE"],
	["variable", "n"],
	["variable", "X"],
	["punctuation", ";"],

	["variable", "hme_root"],
	["symbol", "$1"],
	["punctuation", "{"],
	["variable", "n"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["variable", "root"],
	["punctuation", ":"],
	["operator", "^"],
	["punctuation", "("],
	["variable", "Hashmap"],
	["variable", "n"],
	["variable", "X"],
	["punctuation", ")"],
	["operator", "="],
	["variable", "HashmapE"],
	["variable", "n"],
	["variable", "X"],
	["punctuation", ";"],

	["comment", "//  HashmapAug, hashmap with an extra value"],

	["comment", "//   (augmentation) of type Y at every node"],

	["comment", "//"],

	["variable", "ahm_edge"],
	["symbol", "#_"],
	["punctuation", "{"],
	["variable", "n"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "Y"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "l"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "m"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],

	["variable", "label"],
	["punctuation", ":"],
	["punctuation", "("],
	["variable", "HmLabel"],
	["operator", "~"],
	["variable", "l"],
	["variable", "n"],
	["punctuation", ")"],
	["punctuation", "{"],
	["variable", "n"],
	["operator", "="],
	["punctuation", "("],
	["operator", "~"],
	["variable", "m"],
	["punctuation", ")"],
	["operator", "+"],
	["variable", "l"],
	["punctuation", "}"],

	["variable", "node"],
	["punctuation", ":"],
	["punctuation", "("],
	["variable", "HashmapAugNode"],
	["variable", "m"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ")"],
	["operator", "="],
	["variable", "HashmapAug"],
	["variable", "n"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ";"],

	["variable", "ahmn_leaf"],
	["symbol", "#_"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "Y"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["variable", "extra"],
	["punctuation", ":"],
	["variable", "Y"],
	["variable", "value"],
	["punctuation", ":"],
	["variable", "X"],
	["operator", "="],
	["variable", "HashmapAugNode"],
	["number", "0"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ";"],

	["variable", "ahmn_fork"],
	["symbol", "#_"],
	["punctuation", "{"],
	["variable", "n"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "Y"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["variable", "left"],
	["punctuation", ":"],
	["operator", "^"],
	["punctuation", "("],
	["variable", "HashmapAug"],
	["variable", "n"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ")"],

	["variable", "right"],
	["punctuation", ":"],
	["operator", "^"],
	["punctuation", "("],
	["variable", "HashmapAug"],
	["variable", "n"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ")"],
	["variable", "extra"],
	["punctuation", ":"],
	["variable", "Y"],
	["operator", "="],
	["variable", "HashmapAugNode"],
	["punctuation", "("],
	["variable", "n"],
	["operator", "+"],
	["number", "1"],
	["punctuation", ")"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ";"],

	["variable", "ahme_empty"],
	["symbol", "$0"],
	["punctuation", "{"],
	["variable", "n"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "Y"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["variable", "extra"],
	["punctuation", ":"],
	["variable", "Y"],

	["operator", "="],
	["variable", "HashmapAugE"],
	["variable", "n"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ";"],

	["variable", "ahme_root"],
	["symbol", "$1"],
	["punctuation", "{"],
	["variable", "n"],
	["punctuation", ":"],
	["symbol", "#"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "X"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["punctuation", "{"],
	["variable", "Y"],
	["punctuation", ":"],
	["builtin", "Type"],
	["punctuation", "}"],
	["variable", "root"],
	["punctuation", ":"],
	["operator", "^"],
	["punctuation", "("],
	["variable", "HashmapAug"],
	["variable", "n"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ")"],

	["variable", "extra"],
	["punctuation", ":"],
	["variable", "Y"],
	["operator", "="],
	["variable", "HashmapAugE"],
	["variable", "n"],
	["variable", "X"],
	["variable", "Y"],
	["punctuation", ";"],

	["variable", "acst_unchanged"],
	["symbol", "$0"],
	["operator", "="],
	["variable", "AccStatusChange"],
	["punctuation", ";"],
	["comment", "// x -> x"],

	["variable", "acst_frozen"],
	["symbol", "$10"],
	["operator", "="],
	["variable", "AccStatusChange"],
	["punctuation", ";"],
	["comment", "// init -> frozen"],

	["variable", "acst_deleted"],
	["symbol", "$11"],
	["operator", "="],
	["variable", "AccStatusChange"],
	["punctuation", ";"],
	["comment", "// frozen -> deleted"],

	["variable", "shard_descr"],
	["symbol", "#b"],
	["variable", "seq_no"],
	["punctuation", ":"],
	["builtin", "uint32"],
	["variable", "reg_mc_seqno"],
	["punctuation", ":"],
	["builtin", "uint32"],

	["variable", "start_lt"],
	["punctuation", ":"],
	["builtin", "uint64"],
	["variable", "end_lt"],
	["punctuation", ":"],
	["builtin", "uint64"],

	["variable", "root_hash"],
	["punctuation", ":"],
	["builtin", "bits256"],
	["variable", "file_hash"],
	["punctuation", ":"],
	["builtin", "bits256"],

	["variable", "before_split"],
	["punctuation", ":"],
	["builtin", "Bool"],
	["variable", "before_merge"],
	["punctuation", ":"],
	["builtin", "Bool"],

	["variable", "want_split"],
	["punctuation", ":"],
	["builtin", "Bool"],
	["variable", "want_merge"],
	["punctuation", ":"],
	["builtin", "Bool"],

	["variable", "nx_cc_updated"],
	["punctuation", ":"],
	["builtin", "Bool"],
	["variable", "flags"],
	["punctuation", ":"],
	["punctuation", "("],
	["symbol", "#"],
	["symbol", "#"],
	["number", "3"],
	["punctuation", ")"],
	["punctuation", "{"],
	["variable", "flags"],
	["operator", "="],
	["number", "0"],
	["punctuation", "}"],

	["variable", "next_catchain_seqno"],
	["punctuation", ":"],
	["builtin", "uint32"],
	["variable", "next_validator_shard"],
	["punctuation", ":"],
	["builtin", "uint64"],

	["variable", "min_ref_mc_seqno"],
	["punctuation", ":"],
	["builtin", "uint32"],
	["variable", "gen_utime"],
	["punctuation", ":"],
	["builtin", "uint32"],

	["variable", "split_merge_at"],
	["punctuation", ":"],
	["variable", "FutureSplitMerge"],

	["variable", "fees_collected"],
	["punctuation", ":"],
	["variable", "CurrencyCollection"],

	["variable", "funds_created"],
	["punctuation", ":"],
	["variable", "CurrencyCollection"],
	["operator", "="],
	["variable", "ShardDescr"],
	["punctuation", ";"]
]
